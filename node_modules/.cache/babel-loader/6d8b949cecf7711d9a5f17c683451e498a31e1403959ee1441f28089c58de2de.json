{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github Repo\\\\infinite_scroll_react_faceprep\\\\src\\\\Pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Heading, Skeleton, UnorderedList, ListItem, Spinner, useToast, Text, Flex, Image } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const isAuth = JSON.parse(localStorage.getItem(\"IsAuth\"));\n  console.log('isAuth:', isAuth);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  useEffect(() => {\n    FetchAllUsers();\n  }, []);\n  const FetchAllUsers = () => {\n    try {\n      setLoading(true);\n      fetch(`https://randomuser.me/api/?results=10`).then(data => data.json()).then(data => {\n        /* we are doing that way because we want every time when user fetch new data\r\n        so that data should be come into new array and also we want previous data as well...\r\n        */\n        setUsers(prevusers => [...prevusers, ...data.results]);\n        setLoading(false);\n      }).catch(error => console.log(error));\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to load users.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.innerHeight + window.pageYOffset >= document.documentElement.offsetHeight) {\n        // User has scrolled to the end of the page\n        if (!loading) {\n          setLoading(true);\n          setTimeout(() => {\n            FetchAllUsers();\n          }, 1000);\n        }\n      }\n    };\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  console.log(users);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    pt: \"4rem\",\n    maxW: \"320px\",\n    mx: \"auto\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      mb: 4,\n      children: \"Infinite Scroll Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 0,\n      children: users.map((user, index) => /*#__PURE__*/_jsxDEV(Box, {\n        py: 2,\n        borderBottom: \"1px solid #ccc\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            fontSize: \"1.1rem\",\n            children: [user.name.first, \" \", user.name.last]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            borderRadius: \"full\",\n            boxSize: \"50px\",\n            src: user.picture.large,\n            alt: \"Dan Abramov\",\n            objectFit: \"cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"center\",\n      mt: 4,\n      children: (() => {\n        const skeletonElements = [];\n        for (let i = 0; i < 10; i++) {\n          skeletonElements.push( /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              mb: \"5px\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"contents wrapped\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"won't be visible\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this));\n        }\n        return skeletonElements;\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"LRKpksYfKeZa7N1e5hJsuc4bSQE=\", false, function () {\n  return [useToast];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Box","Heading","Skeleton","UnorderedList","ListItem","Spinner","useToast","Text","Flex","Image","jsxDEV","_jsxDEV","Home","_s","isAuth","JSON","parse","localStorage","getItem","console","log","users","setUsers","loading","setLoading","toast","FetchAllUsers","fetch","then","data","json","prevusers","results","catch","error","title","description","status","duration","isClosable","handleScroll","window","innerHeight","pageYOffset","document","documentElement","offsetHeight","setTimeout","addEventListener","removeEventListener","pt","maxW","mx","children","textAlign","mb","fileName","_jsxFileName","lineNumber","columnNumber","p","map","user","index","py","borderBottom","justifyContent","fontWeight","fontSize","name","first","last","borderRadius","boxSize","src","picture","large","alt","objectFit","mt","skeletonElements","i","push","Fragment","_c","$RefreshReg$"],"sources":["D:/Github Repo/infinite_scroll_react_faceprep/src/Pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Skeleton,\r\n  UnorderedList,\r\n  ListItem,\r\n  Spinner,\r\n  useToast,\r\n  Text,\r\n  Flex,\r\n  Image,\r\n} from \"@chakra-ui/react\";\r\nconst Home = () => {\r\n  const isAuth = JSON.parse(localStorage.getItem(\"IsAuth\"));\r\n  console.log('isAuth:', isAuth)\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n\r\n  useEffect(() => {\r\n    FetchAllUsers();\r\n  }, []);\r\n\r\n  const FetchAllUsers = () => {\r\n    try {\r\n      setLoading(true);\r\n      fetch(`https://randomuser.me/api/?results=10`)\r\n        .then((data) => data.json())\r\n        .then((data) => {\r\n          /* we are doing that way because we want every time when user fetch new data\r\n          so that data should be come into new array and also we want previous data as well...\r\n          */\r\n          setUsers((prevusers) => [...prevusers, ...data.results]);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Error\",\r\n        description: \"Failed to load users.\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (\r\n        window.innerHeight + window.pageYOffset >=\r\n        document.documentElement.offsetHeight\r\n      ) {\r\n        // User has scrolled to the end of the page\r\n        if (!loading) {\r\n          setLoading(true);\r\n          setTimeout(() => {\r\n            FetchAllUsers();\r\n          }, 1000);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  console.log(users);\r\n  return (\r\n    <Box pt={\"4rem\"} maxW=\"320px\" mx=\"auto\">\r\n      <Heading textAlign=\"center\" mb={4}>\r\n        Infinite Scroll Example\r\n      </Heading>\r\n      <Box p={0}>\r\n        {users.map((user, index) => (\r\n          <Box key={index} py={2} borderBottom=\"1px solid #ccc\">\r\n            <Flex justifyContent={\"space-between\"}>\r\n              <Text fontWeight={\"bold\"} fontSize={\"1.1rem\"}>\r\n                {user.name.first} {user.name.last}\r\n              </Text>\r\n              <Image\r\n                borderRadius=\"full\"\r\n                boxSize=\"50px\"\r\n                src={user.picture.large}\r\n                alt=\"Dan Abramov\"\r\n                objectFit={\"cover\"}\r\n              />\r\n            </Flex>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      {loading && (\r\n        <Box textAlign=\"center\" mt={4}>\r\n          {(() => {\r\n            const skeletonElements = [];\r\n            for (let i = 0; i < 10; i++) {\r\n              skeletonElements.push(\r\n                <React.Fragment key={i}>\r\n                  <Skeleton mb={\"5px\"}>\r\n                    <div>contents wrapped</div>\r\n                    <div>won't be visible</div>\r\n                  </Skeleton>\r\n                </React.Fragment>\r\n              );\r\n            }\r\n            return skeletonElements;\r\n          })()}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}